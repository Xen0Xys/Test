version: '3.8'

services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        API_URL: http://server:4000
    container_name: template-client
    expose:
      - 3000
    environment:
      - SERVICE_FQDN_CLIENT_3000
      - NODE_ENV=production
    depends_on:
      - server
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000" ]
      interval: 30s
      timeout: 10s
      retries: 3

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: template-server
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:${SERVICE_PASSWORD_SERVER}@postgres:5432/postgres
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:4000/version" ]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: "postgres:latest"
    container_name: template-postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=${SERVICE_PASSWORD_SERVER}
      - POSTGRES_USER=postgres
      - POSTGRES_PORT=5432
    volumes:
      - "pg-data:/var/lib/postgresql/data"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:latest
    container_name: template-redis
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3
